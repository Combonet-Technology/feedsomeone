name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.11.1 ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Set Environment Variables
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_DB_NAME: ${{ secrets.POSTGRES_DB_NAME }}
          POSTGRES_DB_PASS: ${{ secrets.POSTGRES_DB_PASS }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DB_USER: ${{ secrets.POSTGRES_DB_USER }}
          OTHER_VARIABLE: "value"  # Replace with your own variable
      - name: Run Tests
        run: |
          export DJANGO_SECRET_KEY="${DJANGO_SECRET_KEY}"
          export POSTGRES_DB_NAME="${OTHER_VARIABLE}"
          export POSTGRES_DB_PASS="${POSTGRES_DB_PASS}"
          export POSTGRES_PORT="${POSTGRES_PORT}"
          export POSTGRES_HOST="${POSTGRES_HOST}"
          export POSTGRES_DB_USER="${POSTGRES_DB_USER}"
          python manage.py test

      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: ${{ always() }}
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
