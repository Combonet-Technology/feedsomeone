name: Django CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.11.1 ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          pip install pipenv
          pipenv install --dev
          pipenv run pip install -r requirements.txt
      - name: Run Tests
        run: |
          export POSTGRES_DB_NAME="${{ secrets.POSTGRES_DB_NAME }}"
          export POSTGRES_DB_PASS="${{ secrets.POSTGRES_DB_PASS }}"
          export POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}"
          export POSTGRES_HOST="${{ secrets.POSTGRES_HOST }}"
          export POSTGRES_DB_USER="${{ secrets.POSTGRES_DB_USER }}"
          export RECAPTCHA_PUBLIC_KEY_v3="${{ secrets.RECAPTCHA_PUBLIC_KEY_v3 }}"
          export EMAIL_HOST_USER="${{ secrets.EMAIL_HOST_USER }}"
          export EMAIL_NO_REPLY="${{ secrets.EMAIL_NO_REPLY }}"
          export RECAPTCHA_PUBLIC_KEY="${{ secrets.RECAPTCHA_PUBLIC_KEY }}"
          export RECAPTCHA_PRIVATE_KEY="${{ secrets.RECAPTCHA_PRIVATE_KEY }}"
          export GMAIL_EMAIL="${{ secrets.GMAIL_EMAIL }}"
          export OUTLOOK_EMAIL="${{ secrets.OUTLOOK_EMAIL }}"
          export HONEYPOT_FIELD_NAME="${{ secrets.HONEYPOT_FIELD_NAME }}"
          export HONEYPOT_VALUE="${{ secrets.HONEYPOT_VALUE }}"
          export SOCIAL_AUTH_FACEBOOK_KEY="${{ secrets.FACEBOOK_KEY }}"
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
          export SOCIAL_AUTH_FACEBOOK_SECRET="${{ secrets.FACEBOOK_KEY }}"
          export SOCIAL_AUTH_TWITTER_KEY="${{ secrets.TWITTER_API_KEY }}"
          export SOCIAL_AUTH_TWITTER_SECRET="${{ secrets.TWITTER_API_SECRET }}"
          export SOCIAL_AUTH_TWITTER_OAUTH2_SECRET="${{ secrets.TWITTER_OAUTH2_CLIENT_ID_KEY }}"
          export SOCIAL_AUTH_TWITTER_OAUTH2_KEY="${{ secrets.TWITTER_OAUTH2_CLIENT_SECRET }}"
          export SOCIAL_AUTH_GOOGLE_OAUTH2_KEY="${{ secrets.GOOGLE_OAUTH2_KEY }}"
          export SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET="${{ secrets.GOOGLE_OAUTH2_SECRET }}"
          export SOCIAL_AUTH_GOOGLE_PLUS_KEY="${{ secrets.GOOGLE_OAUTH2_KEY }}"
          export SOCIAL_AUTH_GOOGLE_PLUS_SECRET="${{ secrets.GOOGLE_OAUTH2_SECRET }}"
          export SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY="${{ secrets.LINKEDIN_OAUTH2_KEY }}"
          export SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET="${{ secrets.LINKEDIN_OAUTH2_SECRET }}"

          python manage.py test

      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: ${{ always() }}
        with:
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
